#
# CSE183 Assignment 9 Backend
# Maxwell Leonetti mleonett@ucsc.edu
# Based on work done by Prof David Harrison dcharris@ucsc.edu

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mail:
    get:
      description: Returns all Emails
      parameters:
        - in: query
          name: mailbox
          required: false
          schema:
            type: string
          description: which mailbox to return
        - in: query
          name: from
          required: false
          schema:
            type: string
          description: get emails sent by from
      responses:
        200:
          description: Email Response
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EmailsResponse'
        404:
          description: Mailbox does not exist
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: adds new sent email
      requestBody:
        description: email to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEmail'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: Unexpected properties in email
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mail/{id}:
    get:
      description: Returns a single email
      parameters:
      - name: id
        in: path
        description: ID of email
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
      responses:
        200:
          description: Email found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
        400:
          description: Invalid ID
        404:
          description: Email not found
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      description: moves an email
      parameters:
      - name: id
        in: path
        description: ID of email
        required: true
        schema:
          type: string
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
      - name: mailbox
        in: query
        required: true
        schema:
          type: string
        description: which mailbox to place email in
      - name: starred
        in: query
        required: false
        schema:
          type: string
        description: if exists toggle starred
      responses:
        204:
          description: Move success
        404:
          description: Email not found
        409:
          description: Cannot move unsent mail to sent
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string

    Email:
      type: object
      maxProperties: 10
      properties:
        id:
          type: string
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
        from:
          type: object
          maxProperties: 2
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
        to:
          type: object
          maxProperties: 2
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
        subject:
          type: string
        sent:
          type: string
        received:
          type: string
        content:
          type: string
        starred:
          type: boolean
        read:
          type: boolean
        avatar:
          type: string
      required:
        - id
        - from
        - to
        - subject
        - sent
        - received
        - content
        - starred
        - read
        - avatar

    PostEmail:
      type: object
      maxProperties: 3
      properties:
        to:
          type: object
          maxProperties: 2
          properties:
            name:
              type: string
            email:
              type: string
          required:
            - name
            - email
        subject:
          type: string
        content:
          type: string
      required:
        - to
        - subject
        - content

    EmailResponse:
      type: object
      maxProperties: 10
      properties:
        id:
          type: string
          pattern: '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
        to:
          type: object
          maxProperties: 2
          properties:
            name:
              type: string 
            email:
              type: string
          required:
            - name
            - email
        from:
          type: object
          maxProperties: 2
          properties:
            name:
              type: string 
            email:
              type: string
          required:
            - name
            - email
        subject:
          type: string
        sent:
          type: string
        received:
          type: string
        starred:
          type: boolean
        read:
          type: boolean
        avatar:
          type: string
        content:
          type: string
          maxLength: 32
      required:
        - to
        - from
        - subject
        - received
        - sent
        - id 
        - starred
        - read
        - avatar
        - content

    EmailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/MailboxResponse'

    MailboxResponse:
      type: object
      properties:
        name:
          type: string
        mail:
          type: array
          items: 
            $ref: '#/components/schemas/EmailResponse'